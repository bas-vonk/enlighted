worker_processes auto;

events {
    worker_connections 1024;
}

http {

  sendfile on;

  # Redirect all HTTP traffic to HTTPS
  server {
    listen 80 default_server;
    server_name _;
    return 301 https://$host$request_uri;
  }

  server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name registry.fovodohovi.nl;

    ssl_certificate     /etc/nginx/ssl/registry.fovodohovi.nl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/registry.fovodohovi.nl/privkey.pem;

    client_max_body_size 0;

    # Reroute to the registry docker container
    location / {
      proxy_pass          http://registry:5000;
      proxy_redirect      off;
      proxy_set_header    Host                $host;
      proxy_set_header    X-Real-IP           $remote_addr;
      proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
      proxy_set_header    X-Forwarded-Proto   https;
      proxy_set_header    Upgrade             $http_upgrade;
      proxy_set_header    Connection          "upgrade";
      proxy_http_version  1.1;
    }
  }

  server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name pgadmin.fovodohovi.nl;

    ssl_certificate     /etc/nginx/ssl/pgadmin.fovodohovi.nl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/pgadmin.fovodohovi.nl/privkey.pem;

    # Reroute to the pgadmin docker container
    location / {
      proxy_pass          http://pgadmin:80;
      proxy_redirect      off;
      proxy_set_header    Host                $host;
      proxy_set_header    X-Real-IP           $remote_addr;
      proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
      proxy_set_header    Upgrade             $http_upgrade;
      proxy_set_header    Connection          "upgrade";
      proxy_http_version  1.1;
    }
  }

  server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name redisinsight.fovodohovi.nl;

    ssl_certificate     /etc/nginx/ssl/redisinsight.fovodohovi.nl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/redisinsight.fovodohovi.nl/privkey.pem;

    # Reroute to the redisinsight docker container
    location / {
      proxy_pass          http://redisinsight:8001;
      proxy_redirect      off;
      proxy_set_header    Host                $host;
      proxy_set_header    X-Real-IP           $remote_addr;
      proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
      proxy_set_header    Upgrade             $http_upgrade;
      proxy_set_header    Connection          "upgrade";
      proxy_http_version  1.1;
    }
  }

  server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name nibe.fovodohovi.nl;

    ssl_certificate     /etc/nginx/ssl/nibe.fovodohovi.nl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/nibe.fovodohovi.nl/privkey.pem;

    # Reroute to the nibe docker container
    location / {
      proxy_pass          http://{{ cluster_ip_nibe }}:80;
      proxy_redirect      off;
      proxy_set_header    Host                $host;
      proxy_set_header    X-Real-IP           $remote_addr;
      proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
      proxy_set_header    Upgrade             $http_upgrade;
      proxy_set_header    Connection          "upgrade";
      proxy_http_version  1.1;
    }
  }

  server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name homeconnect.fovodohovi.nl;

    ssl_certificate     /etc/nginx/ssl/homeconnect.fovodohovi.nl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/homeconnect.fovodohovi.nl/privkey.pem;

    # Reroute to the homeconnect docker container
    location / {
      proxy_pass          http://{{ cluster_ip_homeconnect }}:80;
      proxy_redirect      off;
      proxy_set_header    Host                $host;
      proxy_set_header    X-Real-IP           $remote_addr;
      proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
      proxy_set_header    Upgrade             $http_upgrade;
      proxy_set_header    Connection          "upgrade";
      proxy_http_version  1.1;
    }
  }

  server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name netatmo.fovodohovi.nl;

    ssl_certificate     /etc/nginx/ssl/netatmo.fovodohovi.nl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/netatmo.fovodohovi.nl/privkey.pem;

    # Reroute to the netatmo docker container
    location / {
      proxy_pass          http://{{ cluster_ip_netatmo }}:80;
      proxy_redirect      off;
      proxy_set_header    Host                $host;
      proxy_set_header    X-Real-IP           $remote_addr;
      proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
      proxy_set_header    Upgrade             $http_upgrade;
      proxy_set_header    Connection          "upgrade";
      proxy_http_version  1.1;
    }
  }

  server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name enlighted.fovodohovi.nl;

    ssl_certificate     /etc/nginx/ssl/enlighted.fovodohovi.nl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/enlighted.fovodohovi.nl/privkey.pem;

    # Reroute to the enlighted docker container
    location / {
      rewrite /(.*) /$1   break;
      proxy_pass          http://{{ cluster_ip_enlighted_app }}:80;
      proxy_redirect      off;
      proxy_set_header    Host                $host;
      proxy_set_header    X-Real-IP           $remote_addr;
      proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
      proxy_set_header    Upgrade             $http_upgrade;
      proxy_set_header    Connection          "upgrade";
      proxy_set_header    Request-URI         $request_uri;
      proxy_http_version  1.1;

    }
  }

  server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name enlighted-api.fovodohovi.nl;

    ssl_certificate     /etc/nginx/ssl/enlighted-api.fovodohovi.nl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/enlighted-api.fovodohovi.nl/privkey.pem;

    # Reroute to the enlighted-api docker container
    location / {
      proxy_pass          http://{{ cluster_ip_enlighted_api }}:80;
      proxy_redirect      off;
      proxy_set_header    Host                $host;
      proxy_set_header    X-Real-IP           $remote_addr;
      proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
      proxy_set_header    Upgrade             $http_upgrade;
      proxy_set_header    Connection          "upgrade";
      proxy_http_version  1.1;
    }
  }

}

stream {

  server {
    listen 5432;

    # Reroute to the postgresql docker container
    proxy_pass             postgres:5432;
    proxy_connect_timeout  60s;
    proxy_socket_keepalive on;
  }

}
