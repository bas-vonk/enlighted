---

- name: Ensure the deployment exists
  kubernetes.core.k8s:
    state: present
    apply: yes
    force: yes
    resource_definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: enlighted-api
        namespace: "{{ kubernetes_namespace }}"
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: enlighted-api
        template:
          metadata:
            labels:
              app: enlighted-api
          spec:
            containers:
              - name: enlighted-api
                image: registry.fovodohovi.nl/enlighted-backend:latest
                imagePullPolicy: Always
                command: ["python", "-m"]
                args: ["enlighted.api.run_api"]
                env:
                  - name: SILVER_DB_USERNAME
                    value: "{{ db_username }}"
                  - name: SILVER_DB_PASSWORD
                    value: "{{ db_password }}"
                  - name: SILVER_DB_DATABASE
                    value: "2_silver"
                  - name: SILVER_DB_SCHEMA
                    value: "silver"
                  - name: SILVER_DB_HOSTNAME
                    value: "{{ db_hostname }}"
                  - name: SILVER_DB_PORT
                    value: "{{ db_port }}"
                  - name: GOLD_DB_USERNAME
                    value: "{{ db_username }}"
                  - name: GOLD_DB_PASSWORD
                    value: "{{ db_password }}"
                  - name: GOLD_DB_DATABASE
                    value: "3_gold"
                  - name: GOLD_DB_SCHEMA
                    value: "gold"
                  - name: GOLD_DB_HOSTNAME
                    value: "{{ db_hostname }}"
                  - name: GOLD_DB_PORT
                    value: "{{ db_port }}"
                ports:
                  - containerPort: 80
            imagePullSecrets:
            - name: image-pull-secret

- include_role:
    name: kubernetes/service
  vars:
    namespace: "{{ kubernetes_namespace }}"
    name: enlighted-api
    clusterIP: "{{ cluster_ip_enlighted_api }}"
    targetPort: 80
