version: "3.8"

x-logging: &default-logging
  options:
    max-size: "1m"
    max-file: "1"

services:

  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    volumes:
      - ~/Projects/homeassistant/config/:/config
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    privileged: true
    network_mode: host

  enphase-auth-agent:
    container_name: enphase-auth-agent
    build: .
    depends_on:
      - database
      - enphase-callback-api
    volumes:
      - ./:/www/
    stdin_open: true
    tty: true
    command: python -m minimal_footprint.integrations.enphase.run_auth_agent
    environment:
      - CHOKIDAR_USEPOLLING=true
      - CLIENT_ID=${ENPHASE_CLIENT_ID}
      - CLIENT_SECRET=${ENPHASE_CLIENT_SECRET}
      - API_KEY=${ENPHASE_API_KEY}
      - REDIRECT_URI=${ENPHASE_REDIRECT_URI}
      - SYSTEM_ID=${ENPHASE_SYSTEM_ID}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${ENPHASE_DATABASE_NAME}
      - DB_HOSTNAME=${DB_HOSTNAME}
      - DB_PORT=${DB_PORT}
    restart: unless-stopped
    logging: *default-logging

  enphase-callback-api:
    container_name: enphase-callback-api
    build: .
    depends_on:
      - database
    volumes:
      - ./:/www/
    stdin_open: true
    tty: true
    command: python -m minimal_footprint.integrations.enphase.run_callback_api
    environment:
      - CHOKIDAR_USEPOLLING=true
      - CLIENT_ID=${ENPHASE_CLIENT_ID}
      - CLIENT_SECRET=${ENPHASE_CLIENT_SECRET}
      - API_KEY=${ENPHASE_API_KEY}
      - REDIRECT_URI=${ENPHASE_REDIRECT_URI}
      - SYSTEM_ID=${ENPHASE_SYSTEM_ID}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${ENPHASE_DATABASE_NAME}
      - DB_HOSTNAME=${DB_HOSTNAME}
      - DB_PORT=${DB_PORT}
    restart: unless-stopped
    logging: *default-logging

  enphase-etl:
    container_name: enphase-etl
    build: .
    depends_on:
      - database
      - enphase-callback-api
    volumes:
      - ./:/www/
    stdin_open: true
    tty: true
    command: python -m minimal_footprint.integrations.enphase.run_etl
    environment:
      - CHOKIDAR_USEPOLLING=true
      - CLIENT_ID=${ENPHASE_CLIENT_ID}
      - CLIENT_SECRET=${ENPHASE_CLIENT_SECRET}
      - API_KEY=${ENPHASE_API_KEY}
      - REDIRECT_URI=${ENPHASE_REDIRECT_URI}
      - SYSTEM_ID=${ENPHASE_SYSTEM_ID}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${ENPHASE_DATABASE_NAME}
      - DB_HOSTNAME=${DB_HOSTNAME}
      - DB_PORT=${DB_PORT}
    restart: unless-stopped
    logging: *default-logging

  enphase-envoy-etl:
    container_name: enphase-envoy-etl
    build: .
    depends_on:
      - database
    volumes:
      - ./:/www/
    stdin_open: true
    tty: true
    command: python -m minimal_footprint.integrations.enphase_envoy.run_etl
    environment:
      - CHOKIDAR_USEPOLLING=true
      - API_TOKEN=${ENPHASE_ENVOY_API_TOKEN}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${ENPHASE_ENVOY_DATABASE_NAME}
      - DB_HOSTNAME=${DB_HOSTNAME}
      - DB_PORT=${DB_PORT}
    restart: unless-stopped
    logging: *default-logging

  homeconnect-auth-agent:
    container_name: homeconnect-auth-agent
    build: .
    depends_on:
      - database
      - homeconnect-callback-api
    volumes:
      - ./:/www/
    stdin_open: true
    tty: true
    command: python -m minimal_footprint.integrations.homeconnect.run_auth_agent
    environment:
      - CHOKIDAR_USEPOLLING=true
      - CLIENT_ID=${HOMECONNECT_CLIENT_ID}
      - CLIENT_SECRET=${HOMECONNECT_CLIENT_SECRET}
      - REDIRECT_URI=${HOMECONNECT_REDIRECT_URI}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${HOMECONNECT_DATABASE_NAME}
      - DB_HOSTNAME=${DB_HOSTNAME}
      - DB_PORT=${DB_PORT}
    restart: unless-stopped
    logging: *default-logging

  homeconnect-callback-api:
    container_name: homeconnect-callback-api
    build: .
    depends_on:
      - database
    volumes:
      - ./:/www/
    stdin_open: true
    tty: true
    command: python -m minimal_footprint.integrations.homeconnect.run_callback_api
    environment:
      - CHOKIDAR_USEPOLLING=true
      - CLIENT_ID=${HOMECONNECT_CLIENT_ID}
      - CLIENT_SECRET=${HOMECONNECT_CLIENT_SECRET}
      - REDIRECT_URI=${HOMECONNECT_REDIRECT_URI}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${HOMECONNECT_DATABASE_NAME}
      - DB_HOSTNAME=${DB_HOSTNAME}
      - DB_PORT=${DB_PORT}
    restart: unless-stopped
    logging: *default-logging

  homeconnect-etl-oven:
    container_name: homeconnect-etl-oven
    build: .
    depends_on:
      - database
      - homeconnect-callback-api
    volumes:
      - ./:/www/
    stdin_open: true
    tty: true
    command: python -m minimal_footprint.integrations.homeconnect.run_etl SIEMENS-HM876G0B6-68A40E8DFAFD
    environment:
      - CHOKIDAR_USEPOLLING=true
      - CLIENT_ID=${HOMECONNECT_CLIENT_ID}
      - CLIENT_SECRET=${HOMECONNECT_CLIENT_SECRET}
      - REDIRECT_URI=${HOMECONNECT_REDIRECT_URI}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${HOMECONNECT_DATABASE_NAME}
      - DB_HOSTNAME=${DB_HOSTNAME}
      - DB_PORT=${DB_PORT}
    restart: unless-stopped
    logging: *default-logging

  homeconnect-etl-dishwasher:
    container_name: homeconnect-etl-dishwasher
    build: .
    depends_on:
      - database
      - homeconnect-callback-api
    volumes:
      - ./:/www/
    stdin_open: true
    tty: true
    command: python -m minimal_footprint.integrations.homeconnect.run_etl 012090386871006546
    environment:
      - CHOKIDAR_USEPOLLING=true
      - CLIENT_ID=${HOMECONNECT_CLIENT_ID}
      - CLIENT_SECRET=${HOMECONNECT_CLIENT_SECRET}
      - REDIRECT_URI=${HOMECONNECT_REDIRECT_URI}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${HOMECONNECT_DATABASE_NAME}
      - DB_HOSTNAME=${DB_HOSTNAME}
      - DB_PORT=${DB_PORT}
    restart: unless-stopped
    logging: *default-logging

  nibe-auth-agent:
    container_name: nibe-auth-agent
    build: .
    depends_on:
      - database
      - nibe-callback-api
    volumes:
      - ./:/www/
    stdin_open: true
    tty: true
    command: python -m minimal_footprint.integrations.nibe.run_auth_agent
    environment:
      - CHOKIDAR_USEPOLLING=true
      - CLIENT_ID=${NIBE_CLIENT_ID}
      - CLIENT_SECRET=${NIBE_CLIENT_SECRET}
      - REDIRECT_URI=${NIBE_REDIRECT_URI}
      - SYSTEM_ID=${NIBE_SYSTEM_ID}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${NIBE_DATABASE_NAME}
      - DB_HOSTNAME=${DB_HOSTNAME}
      - DB_PORT=${DB_PORT}
    restart: unless-stopped
    logging: *default-logging

  nibe-callback-api:
    container_name: nibe-callback-api
    build: .
    depends_on:
      - database
    volumes:
      - ./:/www/
    stdin_open: true
    tty: true
    command: python -m minimal_footprint.integrations.nibe.run_callback_api
    environment:
      - CHOKIDAR_USEPOLLING=true
      - CLIENT_ID=${NIBE_CLIENT_ID}
      - CLIENT_SECRET=${NIBE_CLIENT_SECRET}
      - REDIRECT_URI=${NIBE_REDIRECT_URI}
      - SYSTEM_ID=${NIBE_SYSTEM_ID}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${NIBE_DATABASE_NAME}
      - DB_HOSTNAME=${DB_HOSTNAME}
      - DB_PORT=${DB_PORT}
    restart: unless-stopped
    logging: *default-logging

  nibe-etl:
    container_name: nibe-etl
    build: .
    depends_on:
      - database
      - nibe-callback-api
    volumes:
      - ./:/www/
    stdin_open: true
    tty: true
    command: python -m minimal_footprint.integrations.nibe.run_etl
    environment:
      - CHOKIDAR_USEPOLLING=true
      - CLIENT_ID=${NIBE_CLIENT_ID}
      - CLIENT_SECRET=${NIBE_CLIENT_SECRET}
      - REDIRECT_URI=${NIBE_REDIRECT_URI}
      - SYSTEM_ID=${NIBE_SYSTEM_ID}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${NIBE_DATABASE_NAME}
      - DB_HOSTNAME=${DB_HOSTNAME}
      - DB_PORT=${DB_PORT}
    restart: unless-stopped
    logging: *default-logging

  tibber-etl:
    container_name: tibber-etl
    build: .
    depends_on:
      - database
    volumes:
      - ./:/www/
    stdin_open: true
    tty: true
    command: python -m minimal_footprint.integrations.tibber.run_etl
    environment:
      - CHOKIDAR_USEPOLLING=true
      - API_TOKEN=${TIBBER_API_TOKEN}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${TIBBER_DATABASE_NAME}
      - DB_HOSTNAME=${DB_HOSTNAME}
      - DB_PORT=${DB_PORT}
    restart: unless-stopped
    logging: *default-logging

  database:
    container_name: "${DB_HOSTNAME}"
    image: postgres:16.0
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    logging: *default-logging

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:7.7
    environment:
      PGADMIN_DEFAULT_EMAIL: root@root.nl
      PGADMIN_DEFAULT_PASSWORD: root
    restart: unless-stopped
    logging: *default-logging

  jupyter:
    container_name: jupyter
    image: jupyter/minimal-notebook
    volumes:
      - ~/Documents/:/home/jovyan/work/
    environment:
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOSTNAME=${DB_HOSTNAME}
    restart: unless-stopped
    logging: *default-logging

  nginx-reverse-proxy:
    container_name: nginx-reverse-proxy
    image: nginx:latest
    restart: unless-stopped
    ports:
      - 443:443
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt/live/jupyter.fovodohovi.nl/fullchain.pem:/etc/nginx/ssl/jupyter.fovodohovi.nl/fullchain.pem
      - /etc/letsencrypt/live/jupyter.fovodohovi.nl/privkey.pem:/etc/nginx/ssl/jupyter.fovodohovi.nl/privkey.pem
      - /etc/letsencrypt/live/pgadmin.fovodohovi.nl/fullchain.pem:/etc/nginx/ssl/pgadmin.fovodohovi.nl/fullchain.pem
      - /etc/letsencrypt/live/pgadmin.fovodohovi.nl/privkey.pem:/etc/nginx/ssl/pgadmin.fovodohovi.nl/privkey.pem
      - /etc/letsencrypt/live/homeassistant.fovodohovi.nl/fullchain.pem:/etc/nginx/ssl/homeassistant.fovodohovi.nl/fullchain.pem
      - /etc/letsencrypt/live/homeassistant.fovodohovi.nl/privkey.pem:/etc/nginx/ssl/homeassistant.fovodohovi.nl/privkey.pem
      - /etc/letsencrypt/live/nibe.fovodohovi.nl/fullchain.pem:/etc/nginx/ssl/nibe.fovodohovi.nl/fullchain.pem
      - /etc/letsencrypt/live/nibe.fovodohovi.nl/privkey.pem:/etc/nginx/ssl/nibe.fovodohovi.nl/privkey.pem
      - /etc/letsencrypt/live/homeconnect.fovodohovi.nl/fullchain.pem:/etc/nginx/ssl/homeconnect.fovodohovi.nl/fullchain.pem
      - /etc/letsencrypt/live/homeconnect.fovodohovi.nl/privkey.pem:/etc/nginx/ssl/homeconnect.fovodohovi.nl/privkey.pem
      - /etc/letsencrypt/live/enphase.fovodohovi.nl/fullchain.pem:/etc/nginx/ssl/enphase.fovodohovi.nl/fullchain.pem
      - /etc/letsencrypt/live/enphase.fovodohovi.nl/privkey.pem:/etc/nginx/ssl/enphase.fovodohovi.nl/privkey.pem

volumes:
  pg_data:
